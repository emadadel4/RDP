name: CI

on:
  schedule:
    - cron: "45 * * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389

    # Get ngrok endpoints
    - name: Get ngrok endpoint
      run: |
        $ngrokStatus = .\ngrok\ngrok.exe http 3389
        $ngrokUrl = $ngrokStatus | Select-String -Pattern "Forwarding" | ForEach-Object { $_.Line.Trim() }
        echo "ngrok endpoint: $ngrokUrl"
        echo "::set-output name=ngrok_url::$ngrokUrl"
      id: get_ngrok_url

    # Send the ngrok endpoint to Telegram
    - name: Send ngrok URL to Telegram
      run: |
        $ngrokUrl = "${{ steps.get_ngrok_url.outputs.ngrok_url }}"
        $botToken = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
        $chatId = "${{ secrets.TELEGRAM_CHAT_ID }}"
        $message = "The ngrok endpoint is: $ngrokUrl"
        $uri = "https://api.telegram.org/bot$botToken/sendMessage?chat_id=$chatId&text=$message"
        Invoke-WebRequest -Uri $uri
